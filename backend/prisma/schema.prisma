datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int    @id @default(autoincrement())
  name        String
  email       String @unique
  password    String
  invite_code String @unique

  // Relasi
  ownedProjects  Project[]       @relation("UserOwnedProjects")
  projectMembers ProjectMember[]
  projectInvites ProjectInvite[] @relation("UserInvites")
  assignedTasks  Task[]          @relation("AssignedTasks")
}

model Project {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  invite_code String @unique

  // Relasi ke owner (User)
  owner    User @relation("UserOwnedProjects", fields: [owner_id], references: [id])
  owner_id Int

  // Relasi lain
  members ProjectMember[]
  invites ProjectInvite[]
  tasks   Task[]
}

model ProjectMember {
  id         Int     @id @default(autoincrement())
  project    Project @relation(fields: [project_id], references: [id])
  project_id Int

  user    User @relation(fields: [user_id], references: [id])
  user_id Int
}

model Task {
  id               Int      @id @default(autoincrement())
  title            String
  description      String
  project          Project  @relation(fields: [project_id], references: [id])
  project_id       Int
  assigned_user    User     @relation(name: "AssignedTasks", fields: [assigned_user_id], references: [id])
  assigned_user_id Int
  status           String   @default("ON_PROGRESS")
  comment          String? // optional
  createdAt        DateTime @default(now())
}

model ProjectInvite {
  id        Int     @id @default(autoincrement())
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  invited_user  User @relation("UserInvites", fields: [invitedUserId], references: [id])
  invitedUserId Int

  createdAt DateTime @default(now())
}
